apply plugin: 'com.android.application'


android {

    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion


    defaultConfig {
        applicationId "daily_wagepro.xiaoai.com.daily_wagepro"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        ndk { abiFilters "armeabi", "armeabi-v7a", "x86", "mips" }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
        disable 'RestrictTo', 'LibraryCustomView', 'MissingPrefix'
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
    }

    packagingOptions
            {
                exclude 'META-INF/DEPENDENCIES.txt'
                exclude 'META-INF/LICENSE.txt'
                exclude 'META-INF/NOTICE.txt'
                exclude 'META-INF/NOTICE'
                exclude 'META-INF/LICENSE'
                exclude 'META-INF/DEPENDENCIES'
                exclude 'META-INF/notice.txt'
                exclude 'META-INF/license.txt'
                exclude 'META-INF/dependencies.txt'
                exclude 'META-INF/LGPL2.1'
            }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '25.3.1'
            }
        }
    }
}

dependencies {
    compile 'androidx.recyclerview:recyclerview:1.0.0'
    compile 'androidx.appcompat:appcompat:1.0.0'

    //pagebottomtab
   // compile rootProject.ext.dependencies["pager_bottom_tab_strip"]
    annotationProcessor 'com.hxh.component:basic_component_compile:1.0.1'
    implementation 'com.hxh.component:basic_component_annotation1:1.0.1'

}

//apply plugin: com.hxh.aspjplugin.AspectjPlugin